<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://perfectdarkmode.com/tools/podman/10-security-container-isolation/</link>
    <description>10 Security container isolation []{#10.htm#pgfId-1114069}This chapter []{#10.htm#marker-1121657}covers&#xA;[]{#10.htm#pgfId-1114070 .calibre17}All Linux security features used to keep containers isolated from each other []{#10.htm#pgfId-1114072 .calibre17}Read-only access to kernel filesystems needed for processes within a container but which must be blocked from write access []{#10.htm#pgfId-1114073 .calibre17}Masking of kernel filesystems to hide information from the host system []{#10.htm#pgfId-1114074 .calibre17}Linux capabilities limiting the power of root []{#10.htm#pgfId-1114075 .calibre17}The PID, IPC and network namespaces, which hide most of the operating system from processes within containers []{#10.htm#pgfId-1114076 .calibre17}The mount namespace, which along with SELinux limit the container processesâ€™ access to only the designated image and volumes []{#10.htm#pgfId-1114077 .calibre17}The user namespace, which allows you to write root processes inside of a container that are not root outside of a container []{#10.htm#pgfId-1114078}In this chapter and chapter 11, I review and demonstrate some additional security considerations when using Podman to run containers. Some of the content was covered in other chapters, but I think it is useful to concentrate on these features from a security perspective.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://perfectdarkmode.com/tools/podman/10-security-container-isolation/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>