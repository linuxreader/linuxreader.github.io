<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://perfectdarkmode.com/tools/podman/9-podman-as-a-service/</link>
    <description>9 Podman as a service []{#09.htm#pgfId-1109411}This chapter []{#09.htm#marker-1116839}covers&#xA;[]{#09.htm#pgfId-1109412 .calibre17}Running Podman as a service []{#09.htm#pgfId-1109413 .calibre17}Podman service support for two REST APIs []{#09.htm#pgfId-1109415 .calibre17}Python libraries podman-py[]{#09.htm#marker-1116843 .calibre17} and docker-py for managing Podman containers []{#09.htm#pgfId-1109416 .calibre17}Support for docker-compose{.fm-code-in-text} []{#09.htm#pgfId-1109417 .calibre17}Remote command-line communication with the Podman service []{#09.htm#pgfId-1109418 .calibre17}Managing SSH communications with remote Podman instances []{#09.htm#marker-1111843}[]{#09.htm#pgfId-1109419}In previous chapters, you learned about the Podman command line. The problem with this is sometimes you want to work with containers from a remote system. Similarly, you might want to write code in a scripting language to interact with containers. Docker, being written as a client-server application, supports a popular remote API, which led to the creation of libraries written in Python and JavaScript to access the daemon. Docker-py is a popular Python library used to interact with the Docker daemon.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://perfectdarkmode.com/tools/podman/9-podman-as-a-service/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>