<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://perfectdarkmode.com/tools/podman/3-volumes/</link>
    <description>3 Volumes []{#03.htm#pgfId-1048583}This chapter []{#03.htm#marker-1051546}covers&#xA;[]{#03.htm#pgfId-1048584 .calibre17}Using volumes to isolate data from the containerized application []{#03.htm#pgfId-1048585 .calibre17}Sharing content from your host into containers via volumes []{#03.htm#pgfId-1048587 .calibre17}Using volumes with the user namespace and []{#03.htm#id_Hlk114568025 .calibre17}SELinux []{#03.htm#pgfId-1048588 .calibre17}Embedding volumes into container images []{#03.htm#pgfId-1048590 .calibre17}Exploring different types of volumes and the []{#03.htm#id_Hlk114568236 .calibre17}volume commands []{#03.htm#pgfId-1048591}Up until now, the containers you have been working with include all their content within the container image. As I described in chapter 1, the only thing required to be shared with traditional containers is the Linux kernel. There are several reasons you need to isolate application data from the application, including the following:</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://perfectdarkmode.com/tools/podman/3-volumes/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>