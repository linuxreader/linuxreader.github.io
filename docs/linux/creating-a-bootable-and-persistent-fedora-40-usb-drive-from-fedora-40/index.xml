<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://davidvargas.xyz/linux/creating-a-bootable-and-persistent-fedora-40-usb-drive-from-fedora-40/</link>
    <description>This process worked at creating an image for me, but resulted in a highly unstable system that crashes. Will revisit this at another time. You will need to download a Fedora Live iso here: https://fedoraproject.org/en/workstation/download Then install livecd-iso-to-mediums to provide livecd-iso-to-disk dnf -y install livecd-iso-to-mediums&#xA;Create a file called livecd-iso-to-disk.f38.patch.txt and add the following text to it:&#xA;--- /usr/bin/livecd-iso-to-disk 2022-06-15 04:49:24.000000000 -0700 +++ livecd-iso-to-disk.patched 2023-04-27 09:11:13.665060837 -0700 @@ -1058,7 +1058,7 @@ createFSLayout() { udevadm settle -E $p2 mkfs.fat -v -n ESP $p2 umount $p2 &amp;&gt; /dev/null || : - losetup -d $l2 + losetup -d $l2 &amp;&gt; /dev/null || : fsck.fat -avVw $p2 echo fi @@ -2021,7 +2021,16 @@ if [[ -d $SRCMNT/isolinux/ ]]; then elif [[ -d $SRCMNT/syslinux/ ]]; then [[ -d $SRCMNT/$srcdir/syslinux ]] &amp;&amp; CONFIG_SRC=&#34;$srcdir&#34;/ CONFIG_SRC=&#34;$SRCMNT/${CONFIG_SRC}syslinux&#34; +elif [[ -d $SRCMNT/images/pxeboot ]]; then + CONFIG_SRC=&#34;$SRCMNT/images/pxeboot&#34; fi + +if [[ ! -d ${CONFIG_SRC} ]]; then + printf &#39;\n ATTENTION: + A bootable kernel and initial ram disk could not be found. Exiting...\n&#39; + exitclean +fi + i=${CONFIG_SRC}/initrd*.img cd /tmp rm -rf usr @@ -2263,11 +2272,15 @@ if [[ -n ${format[1]} &amp;&amp; -z $skipcopy ]] ((free &lt; 30*10**9)) &amp;&amp; ((p2s+=1&lt;&lt;27)) || ((p2s+=free/(15*10**9)&lt;&lt;27)) fi - # Guarantee that there is at least 1 MiB of extra space for a gap. - ((oio-p2s%oio &lt; 1&lt;&lt;20)) &amp;&amp; ((p2s+=1&lt;&lt;20)) - # Set partition size to whole 4-MiB or OPT-IO units. - ((p2s=(p2s/oio+1)*oio)) + else + # Force a 100 MB ESP partition + p2s=100*1024*1024 fi + # Guarantee that there is at least 1 MiB of extra space for a gap. + ((oio-p2s%oio &lt; 1&lt;&lt;20)) &amp;&amp; ((p2s+=1&lt;&lt;20)) + # Set partition size to whole 4-MiB or OPT-IO units. + ((p2s=(p2s/oio+1)*oio)) + if [[ -z $nomac ]]; then l3=$SRCMNT/images/macboot.img ! [[ -f $l3 ]] &amp;&amp; l3=$SRCMNT/isolinux/macboot.img @@ -2742,6 +2755,16 @@ if ! [[ -f $BOOTCONFIG ]]; then [[ -f $f ]] &amp;&amp; mv $f $BOOTCONFIG &amp;&amp; break done fi +if [[ ! -f $BOOTCONFIG ]]; then + # Dummy-up a boot configuration file when missing for EFI boot + if [[ -n $efi ]]; then + echo &#34;#### Unused dummy boot loader configuration file ####&#34; &gt; $BOOTCONFIG + else + echo &#34;ERROR: Unable to find a non-UEFI boot configuration file.&#34; + exitclean + fi +fi + TITLE=$(sed -n -r &#39;/^\s*label\s+linux/I {n s/^\s*menu\s+label\s+\^\S+\s+(.*)/\1/Ip;q} &#39; $BOOTCONFIG) Or you can grab the file from this thread: https://github.com/livecd-tools/livecd-tools/issues/262</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://davidvargas.xyz/linux/creating-a-bootable-and-persistent-fedora-40-usb-drive-from-fedora-40/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>