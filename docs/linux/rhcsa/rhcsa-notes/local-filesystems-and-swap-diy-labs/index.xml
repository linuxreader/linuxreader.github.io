<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://linuxreader.com/linux/rhcsa/rhcsa-notes/local-filesystems-and-swap-diy-labs/</link>
    <description>Local Filesystems and Swap DIY Labs Lab: Create VFAT, Ext4, and XFS File Systems in Partitions and Mount Persistently Create three 70MB primary partitions on one of the available 250MB disks (lsblk) by invoking the parted utility directly at the command prompt. [root@server2 mapper]# parted /dev/sdc mklabel msdos Information: You may need to update /etc/fstab. [root@server2 mapper]# parted /dev/sdc mkpart primary 1 70m Information: You may need to update /etc/fstab. root@server2 mapper]# parted /dev/sdb print Model: ATA VBOX HARDDISK (scsi) Disk /dev/sdb: 262MB Sector size (logical/physical): 512B/512B Partition Table: msdos Disk Flags: Number Start End Size Type File system Flags 1 1049kB 70.3MB 69.2MB primary parted) mkpart primary 71MB 140MB Warning: The resulting partition is not properly aligned for best performance: 138671s % 2048s != 0s Ignore/Cancel? Ignore/Cancel? ignore (parted) mkpart primary 140MB 210MB Warning: The resulting partition is not properly aligned for best performance: 273438s % 2048s != 0s Ignore/Cancel? ignore (parted) print Model: ATA VBOX HARDDISK (scsi) Disk /dev/sdb: 262MB Sector size (logical/physical): 512B/512B Partition Table: msdos Disk Flags: Number Start End Size Type File system Flags 1 1049kB 70.3MB 69.2MB primary 2 71.0MB 140MB 69.0MB primary 3 140MB 210MB 70.0MB primary Apply label “msdos” if the disk is new. Initialize partition 1 with VFAT, partition 2 with Ext4, and partition 3 with XFS file system types. [root@server2 mapper]# sudo mkfs -t vfat /dev/sdc1 mkfs.fat 4.2 (2021-01-31) [root@server2 mapper]# sudo mkfs -t ext4 /dev/sdc2 mke2fs 1.46.5 (30-Dec-2021) Creating filesystem with 67380 1k blocks and 16848 inodes Filesystem UUID: 43b590ff-3330-4b88-aef9-c3a97d8cf51e Superblock backups stored on blocks: 8193, 24577, 40961, 57345 Allocating group tables: done Writing inode tables: done Creating journal (4096 blocks): done Writing superblocks and filesystem accounting information: done [root@server2 mapper]# sudo mkfs -t xfs /dev/sdc3 Filesystem should be larger than 300MB. Log size should be at least 64MB. Support for filesystems like this one is deprecated and they will not be supported in future releases. meta-data=/dev/sdb3 isize=512 agcount=4, agsize=4273 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=1, sparse=1, rmapbt=0 = reflink=1 bigtime=1 inobtcount=1 nrext64=0 data = bsize=4096 blocks=17089, imaxpct=25 = sunit=0 swidth=0 blks naming =version 2 bsize=4096 ascii-ci=0, ftype=1 log =internal log bsize=4096 blocks=1368, version=2 = sectsz=512 sunit=0 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 Create mount points /vfatfs5, /ext4fs5, and /xfsfs5, and mount all three manually. [root@server2 mapper]# mkdir /vfatfs5 /ext4fs5 /xfsfs5 [root@server2 mapper]# mount /dev/sdc1 /vfatfs5 mount: (hint) your fstab has been modified, but systemd still uses the old version; use &#39;systemctl daemon-reload&#39; to reload. [root@server2 mapper]# mount /dev/sdc2 /ext4fs5 mount: (hint) your fstab has been modified, but systemd still uses the old version; use &#39;systemctl daemon-reload&#39; to reload. [root@server2 mapper]# mount /dev/sdc3 /xfsfs5 mount: (hint) your fstab has been modified, but systemd still uses the old version; use &#39;systemctl daemon-reload&#39; to reload. [root@server2 mapper]# mount /dev/sdb1 on /vfatfs5 type vfat (rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,errors=remount-ro) /dev/sdb2 on /ext4fs5 type ext4 (rw,relatime,seclabel) /dev/sdb3 on /xfsfs5 type xfs (rw,relatime,seclabel,attr2,inode64,logbufs=8,logbsize=32k,noquota) Determine the UUIDs for the three file systems, and add them to the fstab file. [root@server2 mapper]# blkid /dev/sdc1 /dev/sdc2 /dev/sdc3 &gt;&gt; /etc/fstab [root@server2 mapper]# vim /etc/fstab Unmount all three file systems manually, and execute mount -a to mount them all. umount /dev/sdb1 /dev/sdb2 /dev/sdb3 Run df -h for verification. Lab: Create XFS File System in LVM VDO Volume and Mount Persistently Ensure that VDO software is installed. sudo dnf install kmod-kvdo</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://linuxreader.com/linux/rhcsa/rhcsa-notes/local-filesystems-and-swap-diy-labs/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>