<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://linuxreader.com/linux/rhcsa/rhcsa-notes/advanced-file-management-labs/</link>
    <description>Advanced File Management Labs Lab: find stuff Create file 10 and search for it. [vagrant@server1 ~]$ sudo touch /root/file10 [vagrant@server1 ~]$ sudo find / -name file10 -print /root/file10 Perform a case insensitive search for files and directories in /dev that begin with “usb” followed by any characters. [vagrant@server1 ~]$ find /dev -iname usb* /dev/usbmon0 Find files smaller than 1MB (-1M) in size (-size) in the root user’s home directory (~). [vagrant@server1 etc]$ find ~ -size -1M Search for files larger than 40MB (+40M) in size (-size) in the /usr directory: [vagrant@server1 etc]$ sudo find /usr -size +40M /usr/share/GeoIP/GeoLite2-City.b Find files in the entire root file system (/) with ownership (-user) set to user daemon and owning group (-group) set to any group other than (-not or ! for negation) user1: [vagrant@server1 etc]$ sudo find / -user daemon -not -group user1 Search for directories (-type) by the name “src” (-name) in /usr at a maximum of two subdirectory levels below (-maxdepth): [vagrant@server1 etc]$ sudo find /usr -maxdepth 2 -type d -name src /usr/local/src /usr/src Run the above search but at least three subdirectory levels beneath /usr, substitute -maxdepth 2 with -mindepth 3. [vagrant@server1 etc]$ sudo find /usr -mindepth 3 -type d -name src /usr/src/kernels/4.18.0-425.3.1.el8.x86_64/drivers/gpu/drm//display/dmub/src /usr/src/kernels/4.18.0-425.3.1.el8.x86_64/tools/usb/usbip/src Find files in the /etc directory that were modified (-mtime) more than (the + sign) 2000 days ago: [vagrant@server1 etc]$ sudo find /etc -mtime +2000 /etc/libuser.conf /etc/xattr.conf /etc/whois.conf Run the above search for files that were modified exactly 12 days ago, replace “+2000” with “12”. [vagrant@server1 etc]$ sudo find /etc -mtime 12 To find files in the /var/log directory that have been modified (-mmin) in the past (the - sign) 100 minutes: [vagrant@server1 etc]$ sudo find /var/log -mmin -100 /var/log/rhsm/rhsmcertd.log /var/log/rhsm/rhsm.log /var/log/audit/audit.log /var/log/dnf.librepo.log /var/log/dnf.rpm.log /var/log/sa /var/log/sa/sa16 /var/log/sa/sar15 /var/log/dnf.log /var/log/hawkey.log /var/log/cron /var/log/messages /var/log/secure Run the above search for files that have been modified exactly 25 minutes ago, replace “-100” with “25”. [vagrant@server1 etc]$ sudo find /var/log -mmin 25 To search for block device files (-type) in the /dev directory with permissions (-perm) set to exactly 660: [vagrant@server1 etc]$ sudo find /dev -type b -perm 660 /dev/dm-1 /dev/dm-0 /dev/sda2 /dev/sda1 /dev/sda Search for character device files (-type) in the /dev directory with at least (-222) world writable permissions (this example would ignore checking the write and execute permissions): [vagrant@server1 etc]$ sudo find /dev -type c -perm -222 Find files in the /etc/systemd directory that are executable by at least their owner or group members: [vagrant@server1 etc]$ sudo find /etc/systemd -perm /110 Search for symlinked files (-type) in /usr with permissions (-perm) set to read and write for the owner and owning group: sudo find /usr -type l -perm -ug=rw Search for directories in the entire directory tree (/) by the name “core” (-name) and list them (ls-ld) as they are discovered without prompting for user confirmation (-exec): [vagrant@server1 etc]$ sudo find / -name core -exec ls -ld {} \; Use the -ok switch to prompt for confirmation before it copies each matched file (-name) in /etc/sysconfig to /tmp: sudo find /etc/sysconfig -name &#39;*.conf&#39; -ok cp {} /tmp \; Lab: Display ACL and give permissions Create and empty file aclfile1 in /tmp and display ACLs on it: cd /tmp touch aclfile1 getfacl aclfile1 Give rw permission to user 1 but with a mask of read only and view the results. setfacl -m u:user1:rw,m:r aclfile1 Promote the mask value to include write bit and verify: setfacl -m m:rw aclfile1 getfacl -c aclfile1 Lab: Identify, Apply, and Erase Access ACLs Switch to user1 and create file acluser1 in /tmp: su - user1 cd /tmp touch acluser1 Use ls and getfacl to check existing acl entries: ls -l acluser1 getfacl acluser1 -c Allocate rw permissions to user100 with setfacl in octal form: setfacl -m u:user100:6 acluser1 Run ls (+) and getfacl to verify: ls -l acluser1 getfacl -c acluser1 Open another terminal as user100 and open the file and edit it.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://linuxreader.com/linux/rhcsa/rhcsa-notes/advanced-file-management-labs/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>