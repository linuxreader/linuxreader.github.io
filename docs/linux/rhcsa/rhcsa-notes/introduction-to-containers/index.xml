<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://localhost:1313/linux/rhcsa/rhcsa-notes/introduction-to-containers/</link>
    <description>Introduction to Containers Take advantage of the native virtualization features available in the Linux kernel. Each container typically encapsulates one self-contained application that includes all dependencies such as library files, configuration files, software binaries, and services. Traditional server/ application deployment:&#xA;Applications may have conflicting requirements in terms of shared library files, package dependencies, and software versioning. Patching or updating the operating system may result in breaking an application functionality. Developers perform an analysis on their current deployments before they decide whether to collocate a new application with an existing one or to go with a new server without taking the risk of breaking the current operation. Container Model:</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/linux/rhcsa/rhcsa-notes/introduction-to-containers/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>